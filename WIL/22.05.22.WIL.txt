22.05.22. 일요일

항해99 D+14

이제 항해99 시작한지 2주일이 지났다. 하루하루는 뭔가 엄청 빠르게 지나가고 있는 것 같은데, 아직 2주밖에 안됐네?? 이런 기분이다.
첫 주에 미니 프로젝트르 하나 끝냈고, 이 후에 자바라는 언어를 처음 배우면서 알고리즘 문제라는 것도 난생 처음 풀어봤다.
자바라는 언어가 워낙 어려운 프로그래밍 언어다 보니까 처음 배우는 나에게는 조금 어려운 감이 없지 않았지만, 그래도 못 해먹겠다 싶은 정도는
아닌듯 싶다. 알고리즘을 배우는 주에 2번의 시험이 있었는데, 한 번은 모의시험이었고 두 번째가 본 시험이었다.
시험 난이도가 엄청 어려운 건 아니었는데, 문제가 2~3문제 주어지고 나는 처음에 어려운 문제를 골라서 풀어보다가 포기하고 쉬운 문제로 선회해서
풀었다. 뭔가 알고리즘한테 진 듯한 이 기분... 자바에 조금 더 익숙해지고 코딩에 익숙해지면 나중에는 알고리즘을 푸는 연습도 좀  더 해봐야겠다.
대기업이나 좋은 기업에 취직하기 위해선 CS지식과 알고리즘 문제들이 중요하다고 하니까 미리미리 조금씩 해두는게 중요할 것 같다.
처음부터 대기업에 들어가기는 사실상 불가능하겠지만...
그리고나서 내가 선택한 주특기인 스프링부트를 처음으로 접했다.
지난 일주일동안 자바에 대해서 그래도 조금 배워서인지, 강의 내용을 좀 빠르게 들을 수 있었다.
항해99 시작 전에 들었던 웹개발 종합반에서 파이썬을 이용해 서버를 만든 적이 있었는데, 어느정도 일맥상통하는 부분도 있는 듯 했다.
(/api/xxx) 주소를 찍어주고 프론트엔드 부분쪽에서 javascript로 ajax 콜로 받아가는 형식.
근데 다른 점이 있다면 한 페이지에 모든걸 담았단 점에 비해 스프링에서는 controller service repository dto 등 각 역할에 따라 다른 페이지에
다른 성격의 코딩을 짜줘야했다. layered architecture 계층아키텍처라는 개념을 처음 알게 되었는데, 직접 클라이언트와 소통하는 단계, 그걸 관리해주는 곳,
데이터베이스와 소통하는 단계 각각 역할을 나눠서 관리하는 것이었다. 아마 관리와 이후 수정이나 개선에 이점이 있기 때문에 어느정도의 지연은 감수하고
이런 작업을 하는 것 같다.
dto라는 건 택배상자라고 빗대어지는데, 정보들을 모아서 각각의 페이지를 다니면서 정보를 옮겨준다. 아직은 각각 어떤 역할을 하고 어떻게 이어지는지
개념정리가 잘 되어있지 않기 때문에, 조금 더 강의를 보고 직접 코딩을 여러번 따라해보면서 익혀야 할 듯 하다.
일단 자바를 배우면서 가장 중요하다고 여겨졌던 부분은 "객체지향"이라는 개념이었다.

	객체지향이란, 컴퓨터 프로그래밍 패러다임 중의 한 종류로서, 기존 명령어를 중심으로 나열하는 프로그래밍 기법에서 벗어나, 객체 모델을 바탕으로
프로그램을 구체화하고 개발하는 프로그래밍 기법을 의미한다. 객체지향에는 캡슐화, 상속, 다형성, 추상화라는 특징이 존재한다.
	캡슐화 - 생성한 객체를 어떤 메서드와 필드로 어떻게 일을 수행할 지 외부에 숨기는 특성을 말한다. 은닉화라고도 하며 보호하고자 하는 데이터의 값을
외부에서 직접 접근하는 것을 방지하기 위해 나온 개념이다. 접근제어자를 이용하여 값을 은닉하고, public method로 값을 통제한다. 
private String xxx;
private Int xxx;

public String getXxx(){returen xxxxx;}
public void setXxx(String xxx){}
public int getXxx(){return xxxxx;}
public void setXxx(){}
	상속 - 클래스는 추상화된 슈퍼클래스와 구체화된 서브 클래스로 구성된다. 예를 들어 사람(슈퍼클래스)와 학생(서브클래스) 지정 예약어 extends를 이용해
상속을 이용한다. 하나의 부모클래스는 여러 자식을 가질 수 있지만, 여럿의 부모 클래스를 가질 순 없다. 자식은 부모의 값이나 행위를 상속받아 사용할 수 있다.
class Student extends Person() {
	public void study() {
		System.out.println("공부를 합니다");
	}
}
	다형성 - 클래스의 상속 관계를 이용하여 슈퍼클래스가 같은 서브 클래스의 동일한 요청을 다르게 처리할 수 있는 특징을 말한다. 예를들어, 사람이라는 클래스가
있고 아침에 이동한다는 행위를 한다고 치면, 사람을 상속받은 학생클래스는 아침에 학교로 이동하고, 사람을 상속받은 직장인 클래스는 아침에 회사로 이동한다.
	추상화 - 매우 중요한 개념이다. 객체의 공통된 특징을 묶어서 추출한다는 개념이다.

그리고 JVM이라는 것을 알게되었는데, JVM(Java Virtual Machine),
	JVM이란, 자바 가상 머신의 약자를 따서 줄여부르는 용어이다. JVM의 역할은 자바 애플리케이션을 클래스 로더를 통해 읽어들여 자바 API와 함께 실행하는 것이다.
그리고 JVM은 JAVA와 OS사이에서 중개자 역할을 수행하여 JAVA가 OS에 구애받지 않고 재사용 가능하게 해준다. 가장 중요한 메모리관리, Garbage collection을 수행한다.
JVM은 스택기반의 가상머신이다. ARM 아키텍쳐 같은 하드웨어는 레지스터 기반으로 동작하는데 비해 jVM은 스택기반으로 동작한다. 한정된 메모리를 효율적으로 사용하여 
최고의 성능을 내기 위해서 가상머신을 사용한다.

	이번주부터 3주동안 스프링 입문 숙련 심화 주차를 거치면서 다양한 과제와 함께 스프링과 친해지게 될 것 이다. 잘 익히고 배워서 실전프로젝트 주차에서 다른 사람들
발목 잡는 일은 만들지 않으리라 다짐한다.